Converter will take english characters and spit out an array with strings for each character
          will take array of character strings and spit out text

Parser: braille to file: take the array of character strings and do braille_split, this will break each char into 3 strings
        then you can do transpose to get all the first line sets together
        file to converter: take one long string array and parse it into braille char strings for the hash to recognize



# class FileRunner
#   def initialize(reader_file,new_file)
#
#   end
#   new_file = ARGV[1]
# reader_file = ARGV[0]
# reader_file_string = File.read(reader_file)
# writer_output = reader_file_string.chomp
# translator = { "a" =>"0.\n..\n..\n" }
#
# File.write(new_file, translator[writer_output])
# new_file_string = File.read(new_file)
# reader_character_count = reader_file_string.chomp.length
# new_file_character_count = new_file_string.chomp.length
#
# puts "Created '#{new_file}' containing #{new_file_character_count} characters."
#
# end

Big picture: convert txt file from eng to braille and braille to eng

small problems:
read txt file from argv[0]   -done
copy contents from argv[0] to argv[1] -done
using hash, convert letters (and spaces) to an array of braille strings - done
invert hash and convert array of braille to text string - done
create parser to split braille string arrays - done
write each index of arrays onto separate lines of the file

What does a new instance of each class create?
FileReader.new = string of the reader file with newline chars
FileWriter.new = initialized with parsed conversion, has write method to write to file
BrailleConvert = initialized with the message that needs to be converted. - this will be FileReader.read(ARGV[0]).Uses method convert!
Parser = initialized with converted message, has braille_array_parser to split braille into arrays with 2 chars each
          also has line_parser method to parse those characters into each of the 3 lines of the txt file


          # def line_parser
          #
          #   File.write("braille.txt",line_1 << braille_split[0])
          #   # #line_1 = File.readlines("braille.txt" or ARGV[1])[0]
          #   # #File.write("braille.txt" or ARGV[0], line_1 << parsed_b[0]
          #   # #this will return an array so still need to convert to string
          #   #
          #   # noiw need to call the Filewriter
          #     end
          #
          #   def line_1
          #     File.readlines("braille.txt")[0]
          #   end
          #
          #   def line_2
          #     File.readlines("braille.txt")[1]
          #   end
          #
          #   def line_3
          #     File.readlines("braille.txt")[2]
          #   end
          #
          # end
